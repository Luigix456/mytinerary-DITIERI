{"ast":null,"code":"const initialState = {\n  city: [],\n  aux: []\n};\n\nconst citiesReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'fetch':\n      return { ...state,\n        city: action.payload,\n        aux: action.payload\n      };\n\n    case 'deleteCity':\n      return { ...state,\n        itineraries: action.payload\n      };\n\n    case 'loadCity':\n      let itineraries = [...state.itineraries];\n      itineraries.push(action.payload);\n      return { ...state,\n        itineraries,\n        aux: [...itineraries]\n      };\n\n    case 'filtro':\n      const filtrado = action.payload.cities.filter(city => city.name.toLowerCase().startsWith(action.payload.value.toLowerCase().trim()));\n      return { ...state,\n        filterCities: filtrado\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default citiesReducer;","map":{"version":3,"sources":["C:/Users/Luis/Documents/BOOTCAMP/MODULO 3/MERN/mytinerary-DITIERI/src/redux/reducers/citiesReducer.js"],"names":["initialState","city","aux","citiesReducer","state","action","type","payload","itineraries","push","filtrado","cities","filter","name","toLowerCase","startsWith","value","trim","filterCities"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,EADW;AAEjBC,EAAAA,GAAG,EAAE;AAFY,CAArB;;AAKA,MAAMC,aAAa,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,OAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHH,QAAAA,IAAI,EAAEI,MAAM,CAACE,OAFV;AAGHL,QAAAA,GAAG,EAAEG,MAAM,CAACE;AAHT,OAAP;;AAKA,SAAK,YAAL;AACI,aAAO,EACH,GAAGH,KADA;AAEHI,QAAAA,WAAW,EAAEH,MAAM,CAACE;AAFjB,OAAP;;AAIJ,SAAK,UAAL;AACI,UAAIC,WAAW,GAAG,CAAC,GAAGJ,KAAK,CAACI,WAAV,CAAlB;AACAA,MAAAA,WAAW,CAACC,IAAZ,CAAiBJ,MAAM,CAACE,OAAxB;AACA,aAAO,EACH,GAAGH,KADA;AAEHI,QAAAA,WAFG;AAGHN,QAAAA,GAAG,EAAE,CAAC,GAAGM,WAAJ;AAHF,OAAP;;AAKA,SAAK,QAAL;AACI,YAAME,QAAQ,GAAGL,MAAM,CAACE,OAAP,CAAeI,MAAf,CAAsBC,MAAtB,CAA8BX,IAAI,IAAIA,IAAI,CAACY,IAAL,CAAUC,WAAV,GAAwBC,UAAxB,CAAmCV,MAAM,CAACE,OAAP,CAAeS,KAAf,CAAqBF,WAArB,GAAmCG,IAAnC,EAAnC,CAAtC,CAAjB;AAEA,aAAO,EACH,GAAGb,KADA;AAEHc,QAAAA,YAAY,EAAER;AAFX,OAAP;;AAIJ;AACI,aAAON,KAAP;AA5BhB;AA+BH,CAhCD;;AAiCA,eAAeD,aAAf","sourcesContent":["const initialState = {\r\n    city: [],\r\n    aux: []\r\n}\r\n\r\nconst citiesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'fetch':\r\n            return {\r\n                ...state,\r\n                city: action.payload,\r\n                aux: action.payload\r\n            }\r\n            case 'deleteCity':\r\n                return {\r\n                    ...state,\r\n                    itineraries: action.payload\r\n                }\r\n            case 'loadCity':\r\n                let itineraries = [...state.itineraries]\r\n                itineraries.push(action.payload)\r\n                return {\r\n                    ...state,\r\n                    itineraries,\r\n                    aux: [...itineraries]\r\n                }\r\n                case 'filtro':\r\n                    const filtrado = action.payload.cities.filter((city => city.name.toLowerCase().startsWith(action.payload.value.toLowerCase().trim())))\r\n        \r\n                    return {\r\n                        ...state,\r\n                        filterCities: filtrado\r\n                    }\r\n                default:\r\n                    return state\r\n            \r\n    }\r\n}\r\nexport default citiesReducer"]},"metadata":{},"sourceType":"module"}