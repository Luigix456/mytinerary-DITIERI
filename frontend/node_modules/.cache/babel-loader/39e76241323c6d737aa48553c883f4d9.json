{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Luis\\\\Documents\\\\BOOTCAMP\\\\MODULO 3\\\\MERN\\\\mytinerary-DITIERI\\\\src\\\\components\\\\comments\\\\comments.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { connect } from \"react-redux\";\nimport citiesActions from \"../../Redux/actions/citiesActions\";\nimport itinerariesActions from '../../Redux/actions/itinerariesActions';\nimport commentsActions from '../../Redux/actions/commentsActions';\nimport { useParams } from 'react-router-dom';\nimport { useState, useRef } from 'react';\nimport activitiesActions from '../../Redux/actions/activitiesActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Comments = props => {\n  _s();\n\n  var _props$comment$userID, _props$user, _props$comment$userID2;\n\n  console.log(props);\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const {\n    id\n  } = useParams();\n  const input = useRef();\n  const [inputText, setInputText] = useState(\"\");\n  const [modify, setModify] = useState(false);\n  const [reload, setReload] = useState(false);\n\n  async function modificarComentario(commentId) {\n    const commentData = {\n      comment: input.current.value\n    };\n    console.log(modify);\n    setModify(!modify);\n    await props.modifiComment(commentId, commentData);\n    props.getOneItinerary(id);\n    props.findOneCity(id);\n    props.itinerariesPerCity(id);\n    setReload(!reload);\n  }\n\n  async function eliminarComentario(commentId) {\n    const commentData = {\n      commentId: commentId\n    };\n    const awaitDelete = await props.deleteComment(props.itineraryId, commentData);\n    console.log(commentData);\n    console.log(awaitDelete);\n\n    if (awaitDelete.success) {\n      props.findOneCity(id);\n      props.itinerariesPerCity(id);\n      console.log(\"eliminadoOoOOo\"); // props.findOneCity(id)\n    }\n  }\n\n  console.log(props.comment.comment);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: ((_props$comment$userID = props.comment.userID) === null || _props$comment$userID === void 0 ? void 0 : _props$comment$userID._id) !== ((_props$user = props.user) === null || _props$user === void 0 ? void 0 : _props$user.id) ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card cardComments \",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header cardHeader\",\n        children: (_props$comment$userID2 = props.comment.userID) === null || _props$comment$userID2 === void 0 ? void 0 : _props$comment$userID2.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text cardText\",\n          children: props.comment.comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }, this)]\n    }, props.comment._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card cardComments\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header cardHeader\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: props.comment.userID.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body \",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          type: \"text\",\n          className: \"card-text textComments\",\n          children: modify ? /*#__PURE__*/_jsxDEV(\"input\", {\n            defaultValue: props.comment.comment,\n            ref: input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: props.comment.comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 27\n        }, this), modify ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            id: props.comment._id,\n            onClick: () => modificarComentario(props.commentId),\n            className: \"btn btn-primary btnComments\",\n            children: \"Confirm Modify\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: props.comment._id,\n            onClick: () => setModify(!modify),\n            className: \"btn btn-primary\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n          id: props.comment._id,\n          onClick: () => setModify(!modify),\n          className: \"btn btn-primary\",\n          children: \"Modify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: props.commentId,\n          onClick: () => eliminarComentario(props.commentId),\n          className: \"btn btn-primary btnComments\",\n          children: \"Eliminar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 23\n    }, this)\n  }, void 0, false);\n};\n\n_s(Comments, \"LRf1gTZlpQC7zTvyJ1xMpQRAKLo=\", false, function () {\n  return [useParams];\n});\n\n_c = Comments;\nconst mapDispatchToProps = {\n  findOneCity: citiesActions.findOneCity,\n  getOneItinerary: itinerariesActions.getOneItinerary,\n  itinerariesPerCity: itinerariesActions.itinerariesPerCity,\n  addComment: commentsActions.addComment,\n  modifiComment: commentsActions.modifiComment,\n  deleteComment: commentsActions.deleteComment,\n  likeDislike: itinerariesActions.likeDislike,\n  activityPerItinerary: activitiesActions.activityPerItinerary\n};\n\nconst mapStateToProps = state => {\n  return {\n    city: state.Data.city,\n    itineraries: state.itinerariesReducers.itineraries,\n    user: state.userReducer.user,\n    activities: state.activitiesReducers.activities\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Comments);\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["C:/Users/Luis/Documents/BOOTCAMP/MODULO 3/MERN/mytinerary-DITIERI/src/components/comments/comments.js"],"names":["React","connect","citiesActions","itinerariesActions","commentsActions","useParams","useState","useRef","activitiesActions","Comments","props","console","log","expanded","setExpanded","handleExpandClick","id","input","inputText","setInputText","modify","setModify","reload","setReload","modificarComentario","commentId","commentData","comment","current","value","modifiComment","getOneItinerary","findOneCity","itinerariesPerCity","eliminarComentario","awaitDelete","deleteComment","itineraryId","success","userID","_id","user","name","mapDispatchToProps","addComment","likeDislike","activityPerItinerary","mapStateToProps","state","city","Data","itineraries","itinerariesReducers","userReducer","activities","activitiesReducers"],"mappings":"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","sourcesContent":["\r\nimport * as React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport citiesActions from \"../../Redux/actions/citiesActions\";\r\nimport itinerariesActions from '../../Redux/actions/itinerariesActions';\r\nimport commentsActions from '../../Redux/actions/commentsActions';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useState, useRef} from 'react';\r\nimport activitiesActions from '../../Redux/actions/activitiesActions';\r\n\r\n\r\nconst Comments = (props) => {\r\n    console.log(props) \r\n    const [expanded, setExpanded] = React.useState(false);\r\n    const handleExpandClick = () => {\r\n      setExpanded(!expanded);\r\n    };\r\n\r\n    const {id} = useParams()\r\n    const input = useRef()\r\n    const [inputText, setInputText] = useState(\"\")\r\n    const [modify, setModify] = useState(false)\r\n    const [reload, setReload] = useState(false)\r\n    \r\n  \r\n    async function modificarComentario(commentId) {\r\n      const commentData = {\r\n        comment: input.current.value,\r\n      }\r\n      console.log(modify)\r\n      setModify(!modify)\r\n      await props.modifiComment(commentId,commentData)\r\n      props.getOneItinerary(id)\r\n      props.findOneCity(id)\r\n      props.itinerariesPerCity(id)\r\n      setReload(!reload)\r\n      \r\n  \r\n    }\r\n    async function eliminarComentario(commentId) {\r\n      const commentData = {\r\n        commentId: commentId,\r\n      }\r\n      const awaitDelete = await props.deleteComment(props.itineraryId, commentData)\r\n      console.log(commentData)\r\n      console.log(awaitDelete)\r\n      \r\n\r\n      if(awaitDelete.success) {\r\n        props.findOneCity(id)\r\n        props.itinerariesPerCity(id)\r\n        console.log(\"eliminadoOoOOo\")\r\n        // props.findOneCity(id)\r\n      }\r\n    }\r\n  \r\n   \r\n  \r\n\r\n    console.log(props.comment.comment)\r\n        return (            \r\n                  <>\r\n                    {props.comment.userID?._id !== props.user?.id ?\r\n                      <div className=\"card cardComments \" key={props.comment._id}>\r\n                        <div className=\"card-header cardHeader\">\r\n                          {props.comment.userID?.name}\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                          <p className=\"card-text cardText\">{props.comment.comment}</p>\r\n                        </div>\r\n                      </div> :\r\n\r\n                      <div className=\"card cardComments\">\r\n                        <div className=\"card-header cardHeader\">\r\n                          <p>{props.comment.userID.name}</p> \r\n                        </div>\r\n                        <div className=\"card-body \">\r\n                          <div type=\"text\" className=\"card-text textComments\" >\r\n                            {modify \r\n                              ? <input defaultValue={props.comment.comment} ref={input} />\r\n                              : <p>{props.comment.comment}</p>\r\n                            }\r\n                          </div>\r\n                          {modify \r\n                            ? (\r\n                              <>\r\n                                <button id={props.comment._id} onClick={() => modificarComentario(props.commentId)} className=\"btn btn-primary btnComments\">Confirm Modify</button>\r\n                                <button id={props.comment._id} onClick={() => setModify(!modify)} className=\"btn btn-primary\">Cancel</button>\r\n                              </>\r\n                            )\r\n                            : <button id={props.comment._id} onClick={() => setModify(!modify)} className=\"btn btn-primary\">Modify</button>\r\n                          }\r\n                          <button id={props.commentId} onClick={() => eliminarComentario(props.commentId)} className=\"btn btn-primary btnComments\">Eliminar</button>\r\n                        </div>\r\n                      </div>\r\n                    }\r\n                  </>\r\n                )}\r\n\r\n              \r\n            \r\n                \r\n                \r\n                \r\n          \r\n          \r\n        \r\n \r\n\r\n\r\nconst mapDispatchToProps = {\r\n          findOneCity: citiesActions.findOneCity,\r\n          getOneItinerary:itinerariesActions.getOneItinerary,\r\n          itinerariesPerCity: itinerariesActions.itinerariesPerCity,\r\n          addComment: commentsActions.addComment,\r\n          modifiComment: commentsActions.modifiComment,\r\n          deleteComment: commentsActions.deleteComment,\r\n          likeDislike: itinerariesActions.likeDislike,\r\n          activityPerItinerary:activitiesActions.activityPerItinerary,\r\n          \r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n            city: state.Data.city,\r\n            itineraries: state.itinerariesReducers.itineraries, \r\n            user: state.userReducer.user, \r\n            activities: state.activitiesReducers.activities,\r\n             \r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Comments);\r\n"]},"metadata":{},"sourceType":"module"}