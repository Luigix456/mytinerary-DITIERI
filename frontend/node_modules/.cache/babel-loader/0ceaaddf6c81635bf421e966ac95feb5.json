{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Luis\\\\Documents\\\\BOOTCAMP\\\\MODULO 3\\\\MERN\\\\1ra-app\\\\src\\\\components\\\\cards.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Card from './citiesCards';\n/* import data from '../../card.json' */\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../styles/stylesCities.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cards() {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [posts, setPosts] = useState([]);\n  const [searchTitle, setSearchTitle] = useState(\"\");\n  const [ciudades, setCiudades] = useState([]);\n  /*  const [city, setCity] = useState(); */\n\n  useEffect(() => {\n    const loadPosts = async () => {\n      setLoading(true);\n      const response = await axios.get(\"http://localhost:4000/api/allcities\");\n      setCiudades(response.data.response.cities);\n      setPosts(response.data.response.cities);\n      setLoading(false);\n    };\n\n    loadPosts();\n  }, []);\n  /* const searching = (search) => {\r\n   setSearchTitle(search.target.value);\r\n   filtro(search.target.value);\r\n  }\r\n  const filtro = function (resultado) {\r\n   let resultadoFiltro = posts.filter(function (card)\r\n   {\r\n     if (\r\n       card.city\r\n         .toString()\r\n         .toLowerCase()\r\n         .startsWith(resultado.toLowerCase().trim())\r\n     ) {\r\n       return card\r\n     } return(console.log(\"filtro\"))\r\n   })\r\n   setCiudades(resultadoFiltro)\r\n  }\r\n   console.log(searchTitle) */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cities\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"inp-search\",\n      type: \"text\",\n      placeholder: \"Search...\",\n      value: filter,\n      onChange: event => setFilter(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container d-flex justify-content-center h-100\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row cards\",\n        children: ciudades.length !== 0 ? ciudades.map(city => /*#__PURE__*/_jsxDEV(Card, {\n          image: city.image,\n          continent: city,\n          name: city.name,\n          description: city.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 16\n        }, this)) : /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"------Not Found  -----\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Cards, \"epUo7FuXhj0pkyU0iomq7J1iqxU=\");\n\n_c = Cards;\nexport default Cards;\n/* import React from 'react'\r\nimport Card from './citiesCards'\r\nimport axios from 'axios'\r\nimport { useState, useEffect } from 'react'\r\nfunction Cards() {\r\n  const [filter, setFilter] = useState('');\r\n  const [ciudades, setCiudades] = useState([]);\r\n\r\n  useEffect (() => {\r\n    const loadDate = async () =>{\r\n      const respuesta = await axios.get(\"http://localhost:4000/api/allcities\")\r\n      setCiudades(respuesta.data.response.ciudades)\r\n      console.log(ciudades)\r\n    }\r\n    \r\n    loadDate();\r\n  },[])\r\n  \r\n  return (\r\n    <div className='cities'>\r\n      <input className=\"inp-search\" type=\"text\" placeholder=\"Search...\" value={filter} onChange={(event)=>setFilter(event.target.value)}/>\r\n      <div className='container d-flex justify-content-center h-100'>\r\n        <div className='row cards'>\r\n           {{\r\n             ciudades.length!== 0? (\r\n               ciudades.map((city) => (\r\n               <Card\r\n                  image = {city.image}\r\n                  continent = {city}\r\n                  name = {city.name}\r\n                  description = {city.description}\r\n               />\r\n             )))\r\n             : (<h2>------Not Found  -----</h2>)\r\n                }}\r\n        </div>\r\n    </div>\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Cards */\n\nvar _c;\n\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"sources":["C:/Users/Luis/Documents/BOOTCAMP/MODULO 3/MERN/1ra-app/src/components/cards.js"],"names":["React","Card","useState","useEffect","axios","Cards","loading","setLoading","posts","setPosts","searchTitle","setSearchTitle","ciudades","setCiudades","loadPosts","response","get","data","cities","filter","event","setFilter","target","value","length","map","city","image","name","description"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA;;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,4BAAP;;;AACC,SAASC,KAAT,GAAiB;AAAA;;AAChB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACD;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMW,SAAS,GAAG,YAAY;AAC5BP,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMQ,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAN,CACrB,qCADqB,CAAvB;AAGAH,MAAAA,WAAW,CAACE,QAAQ,CAACE,IAAT,CAAcF,QAAd,CAAuBG,MAAxB,CAAX;AACAT,MAAAA,QAAQ,CAACM,QAAQ,CAACE,IAAT,CAAcF,QAAd,CAAuBG,MAAxB,CAAR;AACAX,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KARD;;AAUAO,IAAAA,SAAS;AACV,GAZS,EAYP,EAZO,CAAT;AAcA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACE;AAAO,MAAA,SAAS,EAAC,YAAjB;AAA8B,MAAA,IAAI,EAAC,MAAnC;AAA0C,MAAA,WAAW,EAAC,WAAtD;AAAkE,MAAA,KAAK,EAAEK,MAAzE;AAAiF,MAAA,QAAQ,EAAGC,KAAD,IAASC,SAAS,CAACD,KAAK,CAACE,MAAN,CAAaC,KAAd;AAA7G;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,+CAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,kBAEKX,QAAQ,CAACY,MAAT,KAAmB,CAAnB,GACEZ,QAAQ,CAACa,GAAT,CAAcC,IAAD,iBACb,QAAC,IAAD;AACG,UAAA,KAAK,EAAIA,IAAI,CAACC,KADjB;AAEG,UAAA,SAAS,EAAID,IAFhB;AAGG,UAAA,IAAI,EAAIA,IAAI,CAACE,IAHhB;AAIG,UAAA,WAAW,EAAIF,IAAI,CAACG;AAJvB;AAAA;AAAA;AAAA;AAAA,gBADA,CADF,gBASG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBC;;GA7DOxB,K;;KAAAA,K;AA8DV,eAAeA,KAAf;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react'\r\nimport Card from './citiesCards'\r\n/* import data from '../../card.json' */\r\nimport { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport '../styles/stylesCities.css'\r\n function Cards() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [posts, setPosts] = useState([]);\r\n  const [searchTitle, setSearchTitle] = useState(\"\");\r\n  const [ciudades, setCiudades] = useState([])\r\n /*  const [city, setCity] = useState(); */\r\n useEffect(() => {\r\n  const loadPosts = async () => {\r\n    setLoading(true);\r\n    const response = await axios.get(\r\n      \"http://localhost:4000/api/allcities\"\r\n    )\r\n    setCiudades(response.data.response.cities)\r\n    setPosts(response.data.response.cities)\r\n    setLoading(false);\r\n  }\r\n\r\n  loadPosts()\r\n}, [])\r\n\r\n /* const searching = (search) => {\r\n  setSearchTitle(search.target.value);\r\n  filtro(search.target.value);\r\n}\r\nconst filtro = function (resultado) {\r\n  let resultadoFiltro = posts.filter(function (card)\r\n  {\r\n    if (\r\n      card.city\r\n        .toString()\r\n        .toLowerCase()\r\n        .startsWith(resultado.toLowerCase().trim())\r\n    ) {\r\n      return card\r\n    } return(console.log(\"filtro\"))\r\n  })\r\n  setCiudades(resultadoFiltro)\r\n}\r\n  console.log(searchTitle) */\r\n  return (\r\n    <div className='cities'>\r\n      <input className=\"inp-search\" type=\"text\" placeholder=\"Search...\" value={filter} onChange={(event)=>setFilter(event.target.value)}/>\r\n      <div className='container d-flex justify-content-center h-100'>\r\n        <div className='row cards'>\r\n           {\r\n             ciudades.length!== 0? (\r\n               ciudades.map((city) => (\r\n               <Card\r\n                  image = {city.image}\r\n                  continent = {city}\r\n                  name = {city.name}\r\n                  description = {city.description}\r\n               />\r\n             )))\r\n             : (<h2>------Not Found  -----</h2>)\r\n                }\r\n        </div>\r\n    </div>\r\n    </div>\r\n    \r\n  )\r\n  }\r\nexport default Cards\r\n\r\n\r\n/* import React from 'react'\r\nimport Card from './citiesCards'\r\nimport axios from 'axios'\r\nimport { useState, useEffect } from 'react'\r\nfunction Cards() {\r\n  const [filter, setFilter] = useState('');\r\n  const [ciudades, setCiudades] = useState([]);\r\n\r\n  useEffect (() => {\r\n    const loadDate = async () =>{\r\n      const respuesta = await axios.get(\"http://localhost:4000/api/allcities\")\r\n      setCiudades(respuesta.data.response.ciudades)\r\n      console.log(ciudades)\r\n    }\r\n    \r\n    loadDate();\r\n  },[])\r\n  \r\n  return (\r\n    <div className='cities'>\r\n      <input className=\"inp-search\" type=\"text\" placeholder=\"Search...\" value={filter} onChange={(event)=>setFilter(event.target.value)}/>\r\n      <div className='container d-flex justify-content-center h-100'>\r\n        <div className='row cards'>\r\n           {{\r\n             ciudades.length!== 0? (\r\n               ciudades.map((city) => (\r\n               <Card\r\n                  image = {city.image}\r\n                  continent = {city}\r\n                  name = {city.name}\r\n                  description = {city.description}\r\n               />\r\n             )))\r\n             : (<h2>------Not Found  -----</h2>)\r\n                }}\r\n        </div>\r\n    </div>\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Cards */"]},"metadata":{},"sourceType":"module"}