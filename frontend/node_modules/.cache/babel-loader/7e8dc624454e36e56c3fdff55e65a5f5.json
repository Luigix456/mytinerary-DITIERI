{"ast":null,"code":"import axios from 'axios';\nconst commentsActions = {\n  addComment: (itineraryId, comment) => {\n    return async (dispatch, getState) => {\n      console.log(comment);\n      console.log(itineraryId);\n\n      try {\n        const token = localStorage.getItem('token');\n        const res = await axios.post('http://localhost:4000/api/itineraries/comment/' + itineraryId, { ...comment\n        }, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        console.log(res.data);\n        return {\n          success: true,\n          response: res\n        };\n      } catch (error) {\n        console.log(error);\n      }\n    };\n  },\n  modifiComment: (commentId, commentObj) => {\n    const token = localStorage.getItem('token');\n    return async (dispatch, getState) => {\n      const res = await axios.put('http://localhost:4000/api/itineraries/comment/' + commentId, { ...commentObj\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      return {\n        success: true,\n        response: res.data.response\n      };\n    };\n  },\n  deleteComment: (itineraryId, commentId) => {\n    return async (dispatch, getState) => {\n      try {\n        const token = localStorage.getItem('token');\n        console.log(\"itineraryId\", itineraryId);\n        console.log(\"commentId\", commentId);\n        console.log(\"token\", token);\n        const res = await axios.delete(`http://localhost:4000/api/itineraries/comment/${itineraryId}/${commentId.commentId}`, {\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        });\n        console.log(res);\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n  }\n};\nexport default commentsActions;","map":{"version":3,"sources":["C:/Users/Luis/Documents/BOOTCAMP/MODULO 3/MERN/mytinerary-DITIERI/src/redux/actions/commentsActions.js"],"names":["axios","commentsActions","addComment","itineraryId","comment","dispatch","getState","console","log","token","localStorage","getItem","res","post","headers","data","success","response","error","modifiComment","commentId","commentObj","put","deleteComment","delete","Authorization","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,eAAe,GAAG;AAEpBC,EAAAA,UAAU,EAAE,CAACC,WAAD,EAAcC,OAAd,KAA0B;AAClC,WAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACjCC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYL,WAAZ;;AACA,UAAI;AACA,cAAMM,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,cAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,IAAN,CAAW,mDAAiDV,WAA5D,EAAyE,EAAC,GAAGC;AAAJ,SAAzE,EAAuF;AACrGU,UAAAA,OAAO,EAAE;AACL,6BAAkB,UAASL,KAAM;AAD5B;AAD4F,SAAvF,CAAlB;AAMAF,QAAAA,OAAO,CAACC,GAAR,CAAYI,GAAG,CAACG,IAAhB;AACA,eAAO;AAACC,UAAAA,OAAO,EAAC,IAAT;AAAeC,UAAAA,QAAQ,EAACL;AAAxB,SAAP;AACH,OAVD,CAUE,OAAOM,KAAP,EAAc;AACZX,QAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACH;AACJ,KAhBD;AAiBH,GApBmB;AAqBpBC,EAAAA,aAAa,EAAE,CAACC,SAAD,EAAYC,UAAZ,KAA2B;AAEtC,UAAMZ,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,WAAO,OAAON,QAAP,EAAiBC,QAAjB,KAA8B;AACjC,YAAMM,GAAG,GAAG,MAAMZ,KAAK,CAACsB,GAAN,CAAU,mDAAkDF,SAA5D,EAAuE,EAAE,GAAGC;AAAL,OAAvE,EAA0F;AACxGP,QAAAA,OAAO,EAAE;AACL,2BAAkB,UAASL,KAAM;AAD5B;AAD+F,OAA1F,CAAlB;AAOA,aAAO;AAACO,QAAAA,OAAO,EAAE,IAAV;AAAgBC,QAAAA,QAAQ,EAAEL,GAAG,CAACG,IAAJ,CAASE;AAAnC,OAAP;AACH,KATD;AAUH,GAlCmB;AAoCpBM,EAAAA,aAAa,EAAE,CAACpB,WAAD,EAAaiB,SAAb,KAA2B;AACtC,WAAO,OAAOf,QAAP,EAAiBC,QAAjB,KAA8B;AACjC,UAAI;AACA,cAAMG,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACAJ,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BL,WAA3B;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBY,SAAzB;AACAb,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBC,KAArB;AACA,cAAMG,GAAG,GAAG,MAAMZ,KAAK,CAACwB,MAAN,CAAc,iDAAgDrB,WAAY,IAAGiB,SAAS,CAACA,SAAU,EAAjG,EAAmG;AAAEN,UAAAA,OAAO,EAAE;AAAEW,YAAAA,aAAa,EAAE,YAAYhB;AAA7B;AAAX,SAAnG,CAAlB;AAEAF,QAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACA,eAAO;AAAEI,UAAAA,OAAO,EAAE;AAAX,SAAP;AAEH,OAVD,CAUE,OAAOE,KAAP,EAAc;AACZX,QAAAA,OAAO,CAACC,GAAR,CAAYU,KAAK,CAACQ,OAAlB;AACH;AACJ,KAdD;AAeH;AApDmB,CAAxB;AAwDA,eAAezB,eAAf","sourcesContent":["import axios from 'axios';\r\n\r\nconst commentsActions = {\r\n\r\n    addComment: (itineraryId, comment) => {\r\n        return async (dispatch, getState) => {\r\n            console.log(comment)\r\n            console.log(itineraryId)\r\n            try {\r\n                const token = localStorage.getItem('token')\r\n                const res = await axios.post('http://localhost:4000/api/itineraries/comment/'+itineraryId, {...comment}, {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`\r\n                    }\r\n                })\r\n            \r\n                console.log(res.data)\r\n                return {success:true, response:res}\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    },\r\n    modifiComment: (commentId, commentObj) => {\r\n        \r\n        const token = localStorage.getItem('token')\r\n        return async (dispatch, getState) => {\r\n            const res = await axios.put('http://localhost:4000/api/itineraries/comment/'+ commentId, { ...commentObj }, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n\r\n            \r\n            return {success: true, response: res.data.response}\r\n        }\r\n    },\r\n\r\n    deleteComment: (itineraryId,commentId) => {\r\n        return async (dispatch, getState) => {\r\n            try {\r\n                const token = localStorage.getItem('token')\r\n                console.log(\"itineraryId\", itineraryId)\r\n                console.log(\"commentId\", commentId)\r\n                console.log(\"token\", token)\r\n                const res = await axios.delete(`http://localhost:4000/api/itineraries/comment/${itineraryId}/${commentId.commentId}`,{ headers: { Authorization: \"Bearer \" + token } }\r\n                )\r\n                console.log(res)\r\n                return { success: true };\r\n\r\n            } catch (error) {\r\n                console.log(error.message)\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default commentsActions;"]},"metadata":{},"sourceType":"module"}