{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Luis\\\\Documents\\\\BOOTCAMP\\\\MODULO 3\\\\MERN\\\\mytinerary-DITIERI\\\\src\\\\components\\\\snackbar.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar'; //material ui\n\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { styled } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Snack(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const useStyles = makeStyles(theme => ({\n    icon: {\n      marginLeft: '15px'\n    }\n  }));\n  const MySnackbar = styled(Snackbar)({\n    backgroundColor: props.snackbar.success ? 'green' : 'red',\n    color: '#fff',\n    borderRadius: '4px',\n    padding: '6px 16px',\n    fontWeight: '400',\n    lineHeight: '1.43',\n    letterSpacing: '0.01071em'\n  });\n  const classes = useStyles();\n\n  const handleClose = () => {\n    dispatch({\n      type: 'message',\n      payload: {\n        view: false,\n        message: '',\n        success: false\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.snackbar.view === true && /*#__PURE__*/_jsxDEV(MySnackbar, {\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      open: props.snackbar.view,\n      onClose: handleClose,\n      autoHideDuration: 7000,\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [typeof props.snackbar.message === \"string\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: props.snackbar.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 16\n        }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: props.snackbar.message.map(message => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: message.message\n          }, message.message, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          className: classes.icon,\n          size: \"small\",\n          \"aria-label\": \"close\",\n          color: \"inherit\",\n          onClick: handleClose,\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Snack, \"wEJgZQ2jDkMa1kY7WfR7H6lD2Qo=\", false, function () {\n  return [useDispatch, useStyles];\n});\n\n_c = Snack;\n\nconst mapStateToProps = state => {\n  return {\n    snackbar: state.userReducer.snackbar\n  };\n};\n\nexport default connect(mapStateToProps, null)(Snack);\n\nvar _c;\n\n$RefreshReg$(_c, \"Snack\");","map":{"version":3,"sources":["C:/Users/Luis/Documents/BOOTCAMP/MODULO 3/MERN/mytinerary-DITIERI/src/components/snackbar.js"],"names":["React","Snackbar","IconButton","CloseIcon","makeStyles","styled","connect","useDispatch","Snack","props","dispatch","useStyles","theme","icon","marginLeft","MySnackbar","backgroundColor","snackbar","success","color","borderRadius","padding","fontWeight","lineHeight","letterSpacing","classes","handleClose","type","payload","view","message","vertical","horizontal","map","mapStateToProps","state","userReducer"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\n//material ui\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { styled } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport {useDispatch} from 'react-redux'\n\n\nfunction Snack(props) {\n  const dispatch = useDispatch()\n\n  const useStyles = makeStyles(theme => ({\n    icon: {\n      marginLeft: '15px'\n    }\n  }));\n\n  const MySnackbar = styled(Snackbar)({\n    backgroundColor: props.snackbar.success ? 'green' : 'red',\n    color: '#fff',\n    borderRadius: '4px',\n    padding: '6px 16px',\n    fontWeight: '400',\n    lineHeight: '1.43',\n    letterSpacing: '0.01071em',\n  });\n\n  const classes = useStyles();\n\n  const handleClose = () => {\n    dispatch({\n      type: 'message',\n      payload: {\n        view: false,\n        message: '',\n        success: false\n      }\n    });\n  };\n\n  return (\n    <div>\n      {props.snackbar.view === true && (\n        <MySnackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n          }}\n          open={props.snackbar.view}\n          onClose={handleClose}\n          autoHideDuration={7000}\n        >\n          <>\n            {(typeof props.snackbar.message) === \"string\" ?\n              (<p>{props.snackbar.message}</p>) :\n              <ul>\n                {props.snackbar.message.map(message =>\n                  <li key={message.message}>{message.message}</li>\n                )}\n              </ul>\n            }\n            <IconButton className={classes.icon} size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\n              <CloseIcon fontSize=\"small\" />\n            </IconButton>\n          </>\n        </MySnackbar>\n      )}\n\n    </div>\n  );\n}\n\n\n\nconst mapStateToProps = (state) => {\n  return {\n      snackbar: state.userReducer.snackbar,\n      \n  }\n}\n\nexport default connect(mapStateToProps, null)(Snack);"]},"metadata":{},"sourceType":"module"}