{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Luis\\\\Documents\\\\BOOTCAMP\\\\MODULO 3\\\\MERN\\\\mytinerary-DITIERI\\\\src\\\\components\\\\cards.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Card from \"./citiesCards\";\n/* import data from '../../card.json' */\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport citiesActions from \"../redux/actions/citiesActions\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Cards(props) {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [posts, setPosts] = useState([]);\n  const [searchTitle, setSearchTitle] = useState(\"\");\n  const [ciudades, setCiudades] = useState([]); // const searching = (search) => {\n  // setSearchTitle(search.target.value);\n  // props.filtro(search.target.value);\n  // };\n\n  useEffect(() => {\n    props.fetchCities();\n  }, []);\n  console.log(props);\n\n  const searching = evento => {\n    setSearchTitle(evento.target.value);\n    props.filterCity(props.cities, evento.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchfilter\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\xC2\\xA1Find your favorite place!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search...\",\n          value: searchTitle,\n          onChange: searching\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container d-flex justify-content-center h-100\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row cards\",\n        children: [loading ? /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Loading ...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 22\n        }, this) : console.log(\"...\"), props.filterCities.length !== 0 ? props.filterCities.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row cards\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            image: item.image,\n            continent: item.continent,\n            name: item.name,\n            description: item.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this)\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"notFound\",\n          children: \"Not Found :/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Cards, \"epUo7FuXhj0pkyU0iomq7J1iqxU=\");\n\n_c = Cards;\n\nconst mapStateToProps = state => {\n  return {\n    cities: state.Data.city,\n    filterCities: state.Data.filterCities\n  };\n};\n\nconst mapDispatchToProps = {\n  fetchCities: citiesActions.fetchCities,\n  filterCity: citiesActions.filterCity\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Cards);\n\nvar _c;\n\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"sources":["C:/Users/Luis/Documents/BOOTCAMP/MODULO 3/MERN/mytinerary-DITIERI/src/components/cards.js"],"names":["React","Card","useState","useEffect","axios","citiesActions","connect","Cards","props","loading","setLoading","posts","setPosts","searchTitle","setSearchTitle","ciudades","setCiudades","fetchCities","console","log","searching","evento","target","value","filterCity","cities","filterCities","length","map","item","image","continent","name","description","id","mapStateToProps","state","Data","city","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Card from \"./citiesCards\";\r\n/* import data from '../../card.json' */\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport citiesActions from \"../redux/actions/citiesActions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Cards(props) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [posts, setPosts] = useState([]);\r\n  const [searchTitle, setSearchTitle] = useState(\"\");\r\n  const [ciudades, setCiudades] = useState([]);\r\n\r\n  // const searching = (search) => {\r\n  // setSearchTitle(search.target.value);\r\n  // props.filtro(search.target.value);\r\n  // };\r\n\r\n  useEffect(() => {\r\n    props.fetchCities();\r\n  }, []);\r\n  console.log(props);\r\n\r\n  const searching = (evento) => {\r\n    setSearchTitle(evento.target.value);\r\n    props.filterCity(props.cities, evento.target.value);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"searchfilter\">\r\n        <br></br>\r\n        <div className=\"search-title\">\r\n          <p>Â¡Find your favorite place!</p>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search...\"\r\n            value={searchTitle}\r\n            onChange={searching}\r\n          />\r\n        </div>\r\n        {/* <div>\r\n          {props.filterCities.map(city => <h2>{city.name}</h2>)}\r\n        </div> */}\r\n      </div>\r\n       <div className=\"container d-flex justify-content-center h-100\">\r\n        <div className=\"row cards\">\r\n          {loading ? <h4>Loading ...</h4> : console.log(\"...\")}\r\n          {props.filterCities.length !== 0 ? (\r\n            props.filterCities.map((item) => (\r\n              <div className=\"row cards\" key={item.id}>\r\n                <Card\r\n                  image={item.image}\r\n                  continent={item.continent}\r\n                  name={item.name}\r\n                  description={item.description}\r\n                />\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <h3 className=\"notFound\">Not Found :/</h3>\r\n          )}\r\n        </div>\r\n      </div> \r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cities: state.Data.city,\r\n    filterCities: state.Data.filterCities,\r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n  fetchCities: citiesActions.fetchCities,\r\n  filterCity: citiesActions.filterCity,\r\n};\r\nexport default connect(mapStateToProps,mapDispatchToProps) (Cards)"]},"metadata":{},"sourceType":"module"}