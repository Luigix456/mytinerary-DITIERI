{"ast":null,"code":"import axios from \"axios\";\nconst citiesActions = {\n  fetchCities: () => {\n    return async (dispatch, getState) => {\n      const res = await axios.get('http://localhost:4000/api/allcities/');\n      dispatch({\n        type: \"fetch\",\n        payload: res.data.response.ciudades\n      });\n    };\n  },\n  perCity: id => {\n    return async (dispatch, getState) => {\n      const res = await axios.get('http://localhost:4000/api/allcities/' + id);\n      console.log(res);\n      dispatch({\n        type: 'fetch',\n        payload: res.data\n      });\n    };\n  },\n  filterCity: (cities, value) => {\n    return (dispatch, getState) => {\n      dispatch({\n        type: \"filtro\",\n        send: {\n          cities,\n          value\n        }\n      });\n    };\n  },\n  deleteCities: id => {\n    return async (dispatch, getState) => {\n      try {\n        const res = await axios.delete('http://localhost:4000/api/alljpcities/' + id);\n        dispatch({\n          type: 'delete',\n          payload: res.data.response.ciudades\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n  },\n  chargeCities: (name, ciudad) => {\n    return async (dispatch, getState) => {\n      const res = await axios.post('http://localhost:4000/api/alljpcities', {\n        name,\n        ciudad\n      });\n      dispatch({\n        type: 'chargeCities',\n        payload: res.data.response.ciudades\n      });\n    };\n  }\n};\nexport default citiesActions;","map":{"version":3,"sources":["C:/Users/Luis/Documents/BOOTCAMP/MODULO 3/MERN/mytinerary-DITIERI/src/redux/actions/citiesActions.js"],"names":["axios","citiesActions","fetchCities","dispatch","getState","res","get","type","payload","data","response","ciudades","perCity","id","console","log","filterCity","cities","value","send","deleteCities","delete","err","chargeCities","name","ciudad","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,aAAa,GAAG;AAGlBC,EAAAA,WAAW,EAAE,MAAM;AACf,WAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA6B;AAChC,YAAMC,GAAG,GAAG,MAAML,KAAK,CAACM,GAAN,CAAU,sCAAV,CAAlB;AACYH,MAAAA,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAE,OAAP;AAAgBC,QAAAA,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAASC,QAAT,CAAkBC;AAA3C,OAAD,CAAR;AACf,KAHD;AAIH,GARiB;AAUlBC,EAAAA,OAAO,EAAGC,EAAD,IAAQ;AACb,WAAO,OAAOV,QAAP,EAAiBC,QAAjB,KAA6B;AAChC,YAAMC,GAAG,GAAG,MAAML,KAAK,CAACM,GAAN,CAAW,yCAAuCO,EAAlD,CAAlB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYV,GAAZ;AACAF,MAAAA,QAAQ,CAAE;AAACI,QAAAA,IAAI,EAAE,OAAP;AAAgBC,QAAAA,OAAO,EAAEH,GAAG,CAACI;AAA7B,OAAF,CAAR;AACH,KAJD;AAKH,GAhBiB;AAiBlBO,EAAAA,UAAU,EAAE,CAACC,MAAD,EAASC,KAAT,KAAmB;AAC3B,WAAO,CAACf,QAAD,EAAWC,QAAX,KAAwB;AAC3BD,MAAAA,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAE,QAAP;AAAiBY,QAAAA,IAAI,EAAE;AAACF,UAAAA,MAAD;AAASC,UAAAA;AAAT;AAAvB,OAAD,CAAR;AACH,KAFD;AAGH,GArBiB;AAsBlBE,EAAAA,YAAY,EAAGP,EAAD,IAAM;AAChB,WAAO,OAAMV,QAAN,EAAgBC,QAAhB,KAA2B;AAC9B,UAAI;AACA,cAAMC,GAAG,GAAG,MAAML,KAAK,CAACqB,MAAN,CAAa,2CAAyCR,EAAtD,CAAlB;AAEAV,QAAAA,QAAQ,CAAC;AAACI,UAAAA,IAAI,EAAC,QAAN;AAAgBC,UAAAA,OAAO,EAACH,GAAG,CAACI,IAAJ,CAASC,QAAT,CAAkBC;AAA1C,SAAD,CAAR;AACH,OAJD,CAIC,OAAMW,GAAN,EAAU;AACPR,QAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACH;AACJ,KARD;AASH,GAhCiB;AAiClBC,EAAAA,YAAY,EAAE,CAACC,IAAD,EAAOC,MAAP,KAAgB;AAC1B,WAAO,OAAMtB,QAAN,EAAgBC,QAAhB,KAA2B;AAC9B,YAAMC,GAAG,GAAG,MAAML,KAAK,CAAC0B,IAAN,CAAW,uCAAX,EAAmD;AAACF,QAAAA,IAAD;AAAMC,QAAAA;AAAN,OAAnD,CAAlB;AACAtB,MAAAA,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAC,cAAN;AAAsBC,QAAAA,OAAO,EAACH,GAAG,CAACI,IAAJ,CAASC,QAAT,CAAkBC;AAAhD,OAAD,CAAR;AACH,KAHD;AAIH;AAtCiB,CAAtB;AAwCA,eAAeV,aAAf","sourcesContent":["import axios from \"axios\";\r\n\r\nconst citiesActions = {\r\n\r\n\r\n    fetchCities: () => {\r\n        return async (dispatch, getState) =>{\r\n            const res = await axios.get('http://localhost:4000/api/allcities/')\r\n                        dispatch({type: \"fetch\", payload: res.data.response.ciudades})\r\n        }\r\n    },\r\n\r\n    perCity: (id) => {\r\n        return async (dispatch, getState) =>{\r\n            const res = await axios.get ('http://localhost:4000/api/allcities/'+id)\r\n            console.log(res)\r\n            dispatch ({type: 'fetch', payload: res.data})\r\n        }\r\n    },\r\n    filterCity: (cities, value) => {\r\n        return (dispatch, getState) => {\r\n            dispatch({type: \"filtro\", send: {cities, value}})\r\n        };\r\n    },\r\n    deleteCities: (id)=>{\r\n        return async(dispatch, getState)=>{\r\n            try {\r\n                const res = await axios.delete('http://localhost:4000/api/alljpcities/'+id)\r\n                \r\n                dispatch({type:'delete', payload:res.data.response.ciudades})\r\n            }catch(err){\r\n                console.log(err)\r\n            }\r\n        }\r\n    },\r\n    chargeCities: (name, ciudad)=>{\r\n        return async(dispatch, getState)=>{\r\n            const res = await axios.post('http://localhost:4000/api/alljpcities',{name,ciudad})\r\n            dispatch({type:'chargeCities', payload:res.data.response.ciudades})\r\n        }\r\n    }\r\n}\r\nexport default citiesActions"]},"metadata":{},"sourceType":"module"}