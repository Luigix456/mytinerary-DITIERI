{"ast":null,"code":"import _slicedToArray from\"C:/Users/Luis/Documents/BOOTCAMP/MODULO 3/MERN/mytinerary-DITIERI/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";import Card from\"./citiesCards\";/* import data from '../../card.json' */import{useState,useEffect}from\"react\";import axios from\"axios\";import citiesActions from\"../redux/actions/citiesActions\";import{connect}from\"react-redux\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function Cards(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),posts=_useState4[0],setPosts=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),searchTitle=_useState6[0],setSearchTitle=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),ciudades=_useState8[0],setCiudades=_useState8[1];// const searching = (search) => {\n// setSearchTitle(search.target.value);\n// props.filtro(search.target.value);\n// };\nuseEffect(function(){props.fetchCities();},[]);console.log(props);var searching=function searching(evento){setSearchTitle(evento.target.value);props.filterCity(props.cities,evento.target.value);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"searchfilter\",children:[/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{className:\"search-title\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\xA1Find your favorite place!\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search...\",value:searchTitle,onChange:searching})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"container d-flex justify-content-center h-100\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"row cards\",children:[loading?/*#__PURE__*/_jsx(\"h4\",{children:\"Loading ...\"}):console.log(\"...\"),props.filterCities.length!==0?props.filterCities.map(function(item){return/*#__PURE__*/_jsx(\"div\",{className:\"row cards\",children:/*#__PURE__*/_jsx(Card,{image:item.image,continent:item.continent,name:item.name,description:item.description,id:item._id})},item.id);}):/*#__PURE__*/_jsx(\"h3\",{className:\"notFound\",children:\"Not Found :/\"})]})})]});}var mapStateToProps=function mapStateToProps(state){return{cities:state.Data.cities,filterCities:state.Data.filterCities};};var mapDispatchToProps={fetchCities:citiesActions.fetchCities,filterCity:citiesActions.filterCity};export default connect(mapStateToProps,mapDispatchToProps)(Cards);","map":{"version":3,"sources":["C:/Users/Luis/Documents/BOOTCAMP/MODULO 3/MERN/mytinerary-DITIERI/frontend/src/components/cards.js"],"names":["React","Card","useState","useEffect","axios","citiesActions","connect","Cards","props","loading","setLoading","posts","setPosts","searchTitle","setSearchTitle","ciudades","setCiudades","fetchCities","console","log","searching","evento","target","value","filterCity","cities","filterCities","length","map","item","image","continent","name","description","_id","id","mapStateToProps","state","Data","mapDispatchToProps"],"mappings":"gKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,IAAP,KAAiB,eAAjB,CACA,wCACA,OAASC,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,aAAP,KAA0B,gCAA1B,CACA,OAASC,OAAT,KAAwB,aAAxB,C,6IAEA,QAASC,CAAAA,KAAT,CAAeC,KAAf,CAAsB,CACpB,cAA8BN,QAAQ,CAAC,KAAD,CAAtC,wCAAOO,OAAP,eAAgBC,UAAhB,eACA,eAA0BR,QAAQ,CAAC,EAAD,CAAlC,yCAAOS,KAAP,eAAcC,QAAd,eACA,eAAsCV,QAAQ,CAAC,EAAD,CAA9C,yCAAOW,WAAP,eAAoBC,cAApB,eACA,eAAgCZ,QAAQ,CAAC,EAAD,CAAxC,yCAAOa,QAAP,eAAiBC,WAAjB,eAEA;AACA;AACA;AACA;AAEAb,SAAS,CAAC,UAAM,CACdK,KAAK,CAACS,WAAN,GACD,CAFQ,CAEN,EAFM,CAAT,CAGAC,OAAO,CAACC,GAAR,CAAYX,KAAZ,EAEA,GAAMY,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,MAAD,CAAY,CAC5BP,cAAc,CAACO,MAAM,CAACC,MAAP,CAAcC,KAAf,CAAd,CACAf,KAAK,CAACgB,UAAN,CAAiBhB,KAAK,CAACiB,MAAvB,CAA+BJ,MAAM,CAACC,MAAP,CAAcC,KAA7C,EACD,CAHD,CAKA,mBACE,wCACE,aAAK,SAAS,CAAC,cAAf,wBACE,aADF,cAEE,aAAK,SAAS,CAAC,cAAf,wBACE,oDADF,cAEE,cACE,IAAI,CAAC,MADP,CAEE,WAAW,CAAC,WAFd,CAGE,KAAK,CAAEV,WAHT,CAIE,QAAQ,CAAEO,SAJZ,EAFF,GAFF,GADF,cAgBG,YAAK,SAAS,CAAC,+CAAf,uBACC,aAAK,SAAS,CAAC,WAAf,WACGX,OAAO,cAAG,mCAAH,CAA0BS,OAAO,CAACC,GAAR,CAAY,KAAZ,CADpC,CAEGX,KAAK,CAACkB,YAAN,CAAmBC,MAAnB,GAA8B,CAA9B,CACCnB,KAAK,CAACkB,YAAN,CAAmBE,GAAnB,CAAuB,SAACC,IAAD,qBACrB,YAAK,SAAS,CAAC,WAAf,uBACE,KAAC,IAAD,EACE,KAAK,CAAEA,IAAI,CAACC,KADd,CAEE,SAAS,CAAED,IAAI,CAACE,SAFlB,CAGE,IAAI,CAAEF,IAAI,CAACG,IAHb,CAIE,WAAW,CAAEH,IAAI,CAACI,WAJpB,CAKE,EAAE,CAAEJ,IAAI,CAACK,GALX,EADF,EAAgCL,IAAI,CAACM,EAArC,CADqB,EAAvB,CADD,cAaC,WAAI,SAAS,CAAC,UAAd,0BAfJ,GADD,EAhBH,GADF,CAuCD,CAED,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CACjC,MAAO,CACLZ,MAAM,CAAEY,KAAK,CAACC,IAAN,CAAWb,MADd,CAELC,YAAY,CAAEW,KAAK,CAACC,IAAN,CAAWZ,YAFpB,CAAP,CAID,CALD,CAMA,GAAMa,CAAAA,kBAAkB,CAAG,CACzBtB,WAAW,CAAEZ,aAAa,CAACY,WADF,CAEzBO,UAAU,CAAEnB,aAAa,CAACmB,UAFD,CAA3B,CAIA,cAAelB,CAAAA,OAAO,CAAC8B,eAAD,CAAiBG,kBAAjB,CAAP,CAA4ChC,KAA5C,CAAf","sourcesContent":["import React from \"react\";\nimport Card from \"./citiesCards\";\n/* import data from '../../card.json' */\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport citiesActions from \"../redux/actions/citiesActions\";\nimport { connect } from \"react-redux\";\n\nfunction Cards(props) {\n  const [loading, setLoading] = useState(false);\n  const [posts, setPosts] = useState([]);\n  const [searchTitle, setSearchTitle] = useState(\"\");\n  const [ciudades, setCiudades] = useState([]);\n\n  // const searching = (search) => {\n  // setSearchTitle(search.target.value);\n  // props.filtro(search.target.value);\n  // };\n\n  useEffect(() => {\n    props.fetchCities();\n  }, []);\n  console.log(props);\n\n  const searching = (evento) => {\n    setSearchTitle(evento.target.value);\n    props.filterCity(props.cities, evento.target.value);\n  }\n\n  return (\n    <>\n      <div className=\"searchfilter\">\n        <br></br>\n        <div className=\"search-title\">\n          <p>Â¡Find your favorite place!</p>\n          <input\n            type=\"text\"\n            placeholder=\"Search...\"\n            value={searchTitle}\n            onChange={searching}\n          />\n        </div>\n        {/* <div>\n          {props.filterCities.map(city => <h2>{city.name}</h2>)}\n        </div> */}\n      </div>\n       <div className=\"container d-flex justify-content-center h-100\">\n        <div className=\"row cards\">\n          {loading ? <h4>Loading ...</h4> : console.log(\"...\")}\n          {props.filterCities.length !== 0 ? (\n            props.filterCities.map((item) => (\n              <div className=\"row cards\" key={item.id}>\n                <Card\n                  image={item.image}\n                  continent={item.continent}\n                  name={item.name}\n                  description={item.description}\n                  id={item._id}\n                />\n              </div>\n            ))\n          ) : (\n            <h3 className=\"notFound\">Not Found :/</h3>\n          )}\n        </div>\n      </div> \n    </>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    cities: state.Data.cities,\n    filterCities: state.Data.filterCities,\n  };\n};\nconst mapDispatchToProps = {\n  fetchCities: citiesActions.fetchCities,\n  filterCity: citiesActions.filterCity,\n};\nexport default connect(mapStateToProps,mapDispatchToProps)(Cards)"]},"metadata":{},"sourceType":"module"}