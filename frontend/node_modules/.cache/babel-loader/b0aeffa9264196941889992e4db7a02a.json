{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Luis\\\\Documents\\\\BOOTCAMP\\\\MODULO 3\\\\MERN\\\\mytinerary-DITIERI\\\\src\\\\components\\\\comment\\\\comment.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { connect } from \"react-redux\";\nimport citiesActions from \"../../Redux/actions/citiesActions\";\nimport itinerariesActions from '../../Redux/actions/itinerariesActions';\nimport commentsActions from '../../Redux/actions/commentsActions';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport activitiesActions from '../../Redux/actions/activitiesActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Comment = props => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [inputText, setInputText] = useState(\"\");\n  const [modify, setModify] = useState(false);\n  const [reload, setReload] = useState(false);\n\n  const cargarComentario = async () => {\n    const commentData = {\n      comment: inputText\n    };\n    console.log(commentData);\n    const cargarAwait = await props.addComment(props.itineraryId, commentData);\n    console.log(cargarAwait.response.data.success);\n\n    if (cargarAwait.response.data.success) {\n      setInputText(\"\");\n      props.findOneCity(id);\n      props.itinerariesPerCity(id);\n      setReload(!reload);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.user ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card cardComments\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header cardHeaderNew\",\n        children: \"LEAVE US YOUR COMMENT!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body \",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"nuevoComentario\",\n            placeholder: \"Ingresa aqui tu comentario...\",\n            className: \"card-text textComments border border-dark mb-3\",\n            value: inputText,\n            onChange: event => setInputText(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: cargarComentario,\n          className: \"btn btn-primary btnComments\",\n          children: \"Cargar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Realiza singIn y dejanos tu comentario\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }, this)\n  }, void 0, false);\n};\n\n_s(Comment, \"nUrl6mzfXGz26NONr8cwaQCrzPQ=\", false, function () {\n  return [useParams];\n});\n\n_c = Comment;\nconst mapDispatchToProps = {\n  findOneCity: citiesActions.findOneCity,\n  getOneItinerary: itinerariesActions.getOneItinerary,\n  itinerariesPerCity: itinerariesActions.itinerariesPerCity,\n  addComment: commentsActions.addComment,\n  modifiComment: commentsActions.modifiComment,\n  deleteComment: commentsActions.deleteComment,\n  likeDislike: itinerariesActions.likeDislike,\n  activityPerItinerary: activitiesActions.activityPerItinerary\n};\n\nconst mapStateToProps = state => {\n  return {\n    city: state.Data.city,\n    itineraries: state.itinerariesReducers.itineraries,\n    user: state.userReducer.user,\n    activities: state.activitiesReducers.activities\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Comment);\n\nvar _c;\n\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"sources":["C:/Users/Luis/Documents/BOOTCAMP/MODULO 3/MERN/mytinerary-DITIERI/src/components/comment/comment.js"],"names":["React","styled","connect","citiesActions","itinerariesActions","commentsActions","useParams","useState","useEffect","activitiesActions","Comment","props","id","inputText","setInputText","modify","setModify","reload","setReload","cargarComentario","commentData","comment","console","log","cargarAwait","addComment","itineraryId","response","data","success","findOneCity","itinerariesPerCity","user","event","target","value","mapDispatchToProps","getOneItinerary","modifiComment","deleteComment","likeDislike","activityPerItinerary","mapStateToProps","state","city","Data","itineraries","itinerariesReducers","userReducer","activities","activitiesReducers"],"mappings":"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","sourcesContent":["\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { connect } from \"react-redux\";\nimport citiesActions from \"../../Redux/actions/citiesActions\";\nimport itinerariesActions from '../../Redux/actions/itinerariesActions';\nimport commentsActions from '../../Redux/actions/commentsActions';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport activitiesActions from '../../Redux/actions/activitiesActions';\n\nconst Comment = (props) => {\n  \n    \n    const {id} = useParams()\n    \n    const [inputText, setInputText] = useState(\"\")\n    const [modify, setModify] = useState(false)\n    const [reload, setReload] = useState(false)\n        \n  \n    const cargarComentario = async () => {\n      const commentData = {\n        comment: inputText,\n      }\n      console.log(commentData)\n      const cargarAwait = await props.addComment(props.itineraryId, commentData)\n      console.log(cargarAwait.response.data.success)\n      if(cargarAwait.response.data.success) {\n        setInputText(\"\")\n        props.findOneCity(id)\n        props.itinerariesPerCity(id)\n        setReload(!reload)\n      }\n     }\n\n        return (   \n            <>\n            {props.user ?\n                  <div className=\"card cardComments\">\n                    <div className=\"card-header cardHeaderNew\">\n                      LEAVE US YOUR COMMENT!\n                    </div>\n                    <div className=\"card-body \">\n                      <div >\n                        <input id=\"nuevoComentario\" placeholder='Ingresa aqui tu comentario...' className=\"card-text textComments border border-dark mb-3\" value={inputText} onChange={(event) => setInputText(event.target.value)} />\n                      </div>\n                      <button onClick={cargarComentario} className=\"btn btn-primary btnComments\">Cargar</button>\n                    </div>\n                  </div> :\n                  <h1>Realiza singIn y dejanos tu comentario</h1>\n                }\n            </> \n                \n         \n        );\n\n    \n   \n    \n}\n \n\n\nconst mapDispatchToProps = {\n          findOneCity: citiesActions.findOneCity,\n          getOneItinerary:itinerariesActions.getOneItinerary,\n          itinerariesPerCity: itinerariesActions.itinerariesPerCity,\n          addComment: commentsActions.addComment,\n          modifiComment: commentsActions.modifiComment,\n          deleteComment: commentsActions.deleteComment,\n          likeDislike: itinerariesActions.likeDislike,\n          activityPerItinerary:activitiesActions.activityPerItinerary,\n          \n};\n\nconst mapStateToProps = (state) => {\n  return {\n            city: state.Data.city,\n            itineraries: state.itinerariesReducers.itineraries, \n            user: state.userReducer.user, \n            activities: state.activitiesReducers.activities,\n             \n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Comment);\n"]},"metadata":{},"sourceType":"module"}