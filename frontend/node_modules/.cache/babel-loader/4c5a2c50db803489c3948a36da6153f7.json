{"ast":null,"code":"import _asyncToGenerator from\"C:/Users/Luis/Documents/BOOTCAMP/MODULO 3/MERN/mytinerary-DITIERI/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\Luis\\\\Documents\\\\BOOTCAMP\\\\MODULO 3\\\\MERN\\\\mytinerary-DITIERI\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";/* import { convertLength } from \"@mui/material/styles/cssUtils\"; */import axios from\"axios\";var citiesActions={fetchCities:function fetchCities(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch,getState){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get('http://localhost:4000/api/allcities/');case 2:res=_context.sent;console.log(res);dispatch({type:\"fetch\",payload:res.data.response.cities});console.log(res.data);case 6:case\"end\":return _context.stop();}}},_callee);}));return function(_x,_x2){return _ref.apply(this,arguments);};}();},perCity:function perCity(id){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch,getState){var res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return axios.get('http://localhost:4000/api/allcities/'+id);case 2:res=_context2.sent;console.log(res);dispatch({type:'fetchOne',payload:res.data.respuesta});case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x3,_x4){return _ref2.apply(this,arguments);};}();},filterCity:function filterCity(citiesArray,value){return function(dispatch,getState){dispatch({type:\"filtro\",payload:{citiesArray:citiesArray,value:value}});};},deleteCities:function deleteCities(id){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch,getState){var res;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return axios.delete('http://localhost:4000/api/allcities/'+id);case 3:res=_context3.sent;dispatch({type:'delete',payload:res.data.response.ciudades});_context3.next=10;break;case 7:_context3.prev=7;_context3.t0=_context3[\"catch\"](0);console.log(_context3.t0);case 10:case\"end\":return _context3.stop();}}},_callee3,null,[[0,7]]);}));return function(_x5,_x6){return _ref3.apply(this,arguments);};}();},chargeCities:function chargeCities(name,ciudad){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch,getState){var res;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return axios.post('http://localhost:4000/api/allcities',{name:name,ciudad:ciudad});case 2:res=_context4.sent;dispatch({type:'chargeCities',payload:res.data.response.ciudades});case 4:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x7,_x8){return _ref4.apply(this,arguments);};}();}};export default citiesActions;","map":{"version":3,"sources":["C:/Users/Luis/Documents/BOOTCAMP/MODULO 3/MERN/mytinerary-DITIERI/frontend/src/redux/actions/citiesActions.js"],"names":["axios","citiesActions","fetchCities","dispatch","getState","get","res","console","log","type","payload","data","response","cities","perCity","id","respuesta","filterCity","citiesArray","value","deleteCities","delete","ciudades","chargeCities","name","ciudad","post"],"mappings":"gVAAA,oEACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,aAAa,CAAG,CAElBC,WAAW,CAAE,sBAAM,CACf,+FAAO,iBAAOC,QAAP,CAAiBC,QAAjB,gJACeJ,CAAAA,KAAK,CAACK,GAAN,CAAU,sCAAV,CADf,QACGC,GADH,eAEHC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACAH,QAAQ,CAAC,CAACM,IAAI,CAAE,OAAP,CAAgBC,OAAO,CAAEJ,GAAG,CAACK,IAAJ,CAASC,QAAT,CAAkBC,MAA3C,CAAD,CAAR,CACAN,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACK,IAAhB,EAJG,sDAAP,mEAMH,CATiB,CAWlBG,OAAO,CAAE,iBAACC,EAAD,CAAQ,CACb,gGAAO,kBAAOZ,QAAP,CAAiBC,QAAjB,qJACeJ,CAAAA,KAAK,CAACK,GAAN,CAAW,uCAAuCU,EAAlD,CADf,QACGT,GADH,gBAEHC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACAH,QAAQ,CAAE,CAACM,IAAI,CAAE,UAAP,CAAmBC,OAAO,CAAEJ,GAAG,CAACK,IAAJ,CAASK,SAArC,CAAF,CAAR,CAHG,wDAAP,qEAKH,CAjBiB,CAkBlBC,UAAU,CAAE,oBAACC,WAAD,CAAcC,KAAd,CAAwB,CAChC,MAAO,UAAChB,QAAD,CAAWC,QAAX,CAAwB,CAC3BD,QAAQ,CAAC,CAACM,IAAI,CAAE,QAAP,CAAiBC,OAAO,CAAE,CAACQ,WAAW,CAAXA,WAAD,CAAcC,KAAK,CAALA,KAAd,CAA1B,CAAD,CAAR,CACH,CAFD,CAGH,CAtBiB,CAuBlBC,YAAY,CAAE,sBAACL,EAAD,CAAM,CAChB,gGAAO,kBAAMZ,QAAN,CAAgBC,QAAhB,sKAEmBJ,CAAAA,KAAK,CAACqB,MAAN,CAAa,uCAAuCN,EAApD,CAFnB,QAEOT,GAFP,gBAICH,QAAQ,CAAC,CAACM,IAAI,CAAC,QAAN,CAAgBC,OAAO,CAACJ,GAAG,CAACK,IAAJ,CAASC,QAAT,CAAkBU,QAA1C,CAAD,CAAR,CAJD,mFAMCf,OAAO,CAACC,GAAR,eAND,sEAAP,qEASH,CAjCiB,CAkClBe,YAAY,CAAE,sBAACC,IAAD,CAAOC,MAAP,CAAgB,CAC1B,gGAAO,kBAAMtB,QAAN,CAAgBC,QAAhB,qJACeJ,CAAAA,KAAK,CAAC0B,IAAN,CAAW,qCAAX,CAAiD,CAACF,IAAI,CAAJA,IAAD,CAAMC,MAAM,CAANA,MAAN,CAAjD,CADf,QACGnB,GADH,gBAEHH,QAAQ,CAAC,CAACM,IAAI,CAAC,cAAN,CAAsBC,OAAO,CAACJ,GAAG,CAACK,IAAJ,CAASC,QAAT,CAAkBU,QAAhD,CAAD,CAAR,CAFG,wDAAP,qEAIH,CAvCiB,CAAtB,CAyCA,cAAerB,CAAAA,aAAf","sourcesContent":["/* import { convertLength } from \"@mui/material/styles/cssUtils\"; */\nimport axios from \"axios\";\n\nconst citiesActions = {\n    \n    fetchCities: () => {\n        return async (dispatch, getState) =>{\n            const res = await axios.get('http://localhost:4000/api/allcities/')\n            console.log(res)            \n            dispatch({type: \"fetch\", payload: res.data.response.cities})\n            console.log(res.data)\n        }\n    },\n    \n    perCity: (id) => {\n        return async (dispatch, getState) =>{\n            const res = await axios.get ('http://localhost:4000/api/allcities/'+id)\n            console.log(res)\n            dispatch ({type: 'fetchOne', payload: res.data.respuesta})\n        }\n    },\n    filterCity: (citiesArray, value) => {\n        return (dispatch, getState) => {\n            dispatch({type: \"filtro\", payload: {citiesArray, value}})\n        };\n    },\n    deleteCities: (id)=>{\n        return async(dispatch, getState)=>{\n            try {\n                const res = await axios.delete('http://localhost:4000/api/allcities/'+id)\n                \n                dispatch({type:'delete', payload:res.data.response.ciudades})\n            }catch(err){\n                console.log(err)\n            }\n        }\n    },\n    chargeCities: (name, ciudad)=>{\n        return async(dispatch, getState)=>{\n            const res = await axios.post('http://localhost:4000/api/allcities',{name,ciudad})\n            dispatch({type:'chargeCities', payload:res.data.response.ciudades})\n        }\n    }\n}\nexport default citiesActions"]},"metadata":{},"sourceType":"module"}