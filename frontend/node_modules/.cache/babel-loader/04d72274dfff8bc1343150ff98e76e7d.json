{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Luis\\\\Documents\\\\BOOTCAMP\\\\MODULO 3\\\\MERN\\\\mytinerary-DITIERI\\\\src\\\\components\\\\details.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport citiesActions from \"../redux/actions/citiesActions\";\nimport itinerariesActions from \"../redux/actions/itinerariesActions\";\nimport { Link as LinkRouter } from \"react-router-dom\";\nimport DetailsItinerary from \"./detailsCard\";\nimport \"../styles/stylesItineraries.css\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Cards = props => {\n  _s();\n\n  const {\n    cities,\n    itineraries\n  } = props;\n  const [reload, setReload] = useState(false);\n  const [likes, setLikes] = useState(props.itinerary.likes);\n\n  async function likesOrDislikes() {\n    await props.likeDislike(props.id);\n    setReload(!reload);\n  }\n\n  const {\n    id\n  } = useParams();\n  console.log(id);\n  useEffect(() => {\n    props.perCity(id);\n    props.itinerariesPorCiudad(id);\n  }, []);\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: itineraries.length > 0 ? itineraries.map(itinerario => {\n      return /*#__PURE__*/_jsxDEV(DetailsItinerary, {\n        itinerary: itinerario\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 18\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"There is no itineraries in this page at the moment, please comeback soon!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Cards, \"uRrtcLaF2KxTHn/5Nwj+avgVA+g=\", false, function () {\n  return [useParams];\n});\n\n_c = Cards;\n\nconst mapStateToProps = state => {\n  return {\n    cities: state.Data.cities,\n    filterCities: state.Data.filterCities,\n    itineraries: state.itinerariesReducer.itineraries\n  };\n};\n\nconst mapDispatchToProps = {\n  perCity: citiesActions.perCity,\n  itinerariesPorCiudad: itinerariesActions.itinerariesPorCiudad,\n  likeDislike: itinerariesActions.likeDislike\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Cards);\n\nvar _c;\n\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"sources":["C:/Users/Luis/Documents/BOOTCAMP/MODULO 3/MERN/mytinerary-DITIERI/src/components/details.js"],"names":["React","useEffect","useParams","connect","citiesActions","itinerariesActions","Link","LinkRouter","DetailsItinerary","useState","Cards","props","cities","itineraries","reload","setReload","likes","setLikes","itinerary","likesOrDislikes","likeDislike","id","console","log","perCity","itinerariesPorCiudad","length","map","itinerario","mapStateToProps","state","Data","filterCities","itinerariesReducer","mapDispatchToProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;AACA,SAASC,IAAI,IAAIC,UAAjB,QAAmC,kBAAnC;AACA,OAAOC,gBAAP,MAA6B,eAA7B;AACA,OAAO,iCAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;;;;AAGA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAA0BF,KAAhC;AACA,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAACE,KAAK,CAACO,SAAN,CAAgBF,KAAjB,CAAlC;;AAEA,iBAAeG,eAAf,GAAiC;AAC/B,UAAMR,KAAK,CAACS,WAAN,CAAkBT,KAAK,CAACU,EAAxB,CAAN;AACAN,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACD;;AAED,QAAM;AAAEO,IAAAA;AAAF,MAASnB,SAAS,EAAxB;AACAoB,EAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACApB,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,KAAK,CAACa,OAAN,CAAcH,EAAd;AACAV,IAAAA,KAAK,CAACc,oBAAN,CAA2BJ,EAA3B;AAED,GAJQ,EAIN,EAJM,CAAT;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AACA,sBACI;AAAA,cAAGE,WAAW,CAACa,MAAZ,GAAqB,CAArB,GAAyBb,WAAW,CAACc,GAAZ,CAAgBC,UAAU,IAAI;AACtD,0BAAO,QAAC,gBAAD;AAAkB,QAAA,SAAS,EAAEA;AAA7B;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAF2B,CAAzB,gBAGH;AAAA,8BAAK;AAAA;AAAA;AAAA;AAAA,cAAL,eAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA,mBADJ;AAME,CAxBJ;;GAAMlB,K;UAUWR,S;;;KAVXQ,K;;AAyBN,MAAMmB,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLlB,IAAAA,MAAM,EAAEkB,KAAK,CAACC,IAAN,CAAWnB,MADd;AAELoB,IAAAA,YAAY,EAAEF,KAAK,CAACC,IAAN,CAAWC,YAFpB;AAGLnB,IAAAA,WAAW,EAAEiB,KAAK,CAACG,kBAAN,CAAyBpB;AAHjC,GAAP;AAKD,CAND;;AAOA,MAAMqB,kBAAkB,GAAG;AACzBV,EAAAA,OAAO,EAAEpB,aAAa,CAACoB,OADE;AAEzBC,EAAAA,oBAAoB,EAAEpB,kBAAkB,CAACoB,oBAFhB;AAGzBL,EAAAA,WAAW,EAAEf,kBAAkB,CAACe;AAHP,CAA3B;AAKA,eAAejB,OAAO,CAAC0B,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CxB,KAA7C,CAAf","sourcesContent":["import React,{useEffect} from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport citiesActions from \"../redux/actions/citiesActions\";\r\nimport itinerariesActions from \"../redux/actions/itinerariesActions\";\r\nimport { Link as LinkRouter } from \"react-router-dom\";\r\nimport DetailsItinerary from \"./detailsCard\";\r\nimport \"../styles/stylesItineraries.css\"\r\nimport { useState } from 'react';\r\n\r\n\r\nconst Cards = (props) => {\r\n  const { cities, itineraries } = props;\r\n  const [reload, setReload] = useState(false)\r\n  const [likes, setLikes] = useState(props.itinerary.likes)\r\n\r\n  async function likesOrDislikes() {\r\n    await props.likeDislike(props.id)\r\n    setReload(!reload)\r\n  }\r\n\r\n  const { id } = useParams();\r\n  console.log(id);\r\n  useEffect(() => {\r\n    props.perCity(id);\r\n    props.itinerariesPorCiudad(id);\r\n    \r\n  }, []);\r\n  console.log(props);\r\n  return (\r\n      <>{itineraries.length > 0 ? itineraries.map(itinerario => {\r\n          return <DetailsItinerary itinerary={itinerario}/>\r\n      })\r\n    : <div><br></br><h1>There is no itineraries in this page at the moment, please comeback soon!</h1></div>}\r\n      </>\r\n  )};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cities: state.Data.cities,\r\n    filterCities: state.Data.filterCities,\r\n    itineraries: state.itinerariesReducer.itineraries,\r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n  perCity: citiesActions.perCity,\r\n  itinerariesPorCiudad: itinerariesActions.itinerariesPorCiudad,\r\n  likeDislike: itinerariesActions.likeDislike,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cards);\r\n"]},"metadata":{},"sourceType":"module"}