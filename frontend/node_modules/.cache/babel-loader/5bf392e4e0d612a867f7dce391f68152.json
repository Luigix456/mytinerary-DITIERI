{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Luis\\\\Documents\\\\BOOTCAMP\\\\MODULO 3\\\\MERN\\\\mytinerary-DITIERI\\\\src\\\\components\\\\details.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport citiesActions from \"../redux/actions/citiesActions\";\nimport itinerariesActions from '../redux/actions/itinerariesActions';\nimport { Link as LinkRouter } from \"react-router-dom\";\nimport detailsItinerary from './detailsCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Details = props => {\n  _s();\n\n  var _props$itineraries;\n\n  const {\n    city,\n    itineraries\n  } = props;\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    props.findOneCity(id);\n    props.itinerariesPerCity(id);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-column align-items-center justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex row\",\n        children: ((_props$itineraries = props.itineraries) === null || _props$itineraries === void 0 ? void 0 : _props$itineraries.length) !== 0 ? itineraries.map(itinerary => /*#__PURE__*/_jsxDEV(\"detailsItinerary\", {\n          itinerary: itinerary\n        }, itinerary._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"mt-5 title h2 text-center textCarr\",\n          children: \"WE COULD NOT FIND ANY ITINERARY FOR THIS CITY\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 10\n    }, this), \")\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Details, \"WTkzVJt056/9vEFrj9nX40yNcDw=\", false, function () {\n  return [useParams];\n});\n\n_c = Details;\n\nconst mapStateToProps = state => {\n  return {\n    city: state.Data.city,\n    itineraries: state.itinerariesReducers.itineraries\n  };\n};\n\nconst mapDispatchToProps = {\n  findOneCity: citiesActions.findOneCity,\n  itinerariesPerCity: itinerariesActions.itinerariesPerCity\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Details);\n\nvar _c;\n\n$RefreshReg$(_c, \"Details\");","map":{"version":3,"sources":["C:/Users/Luis/Documents/BOOTCAMP/MODULO 3/MERN/mytinerary-DITIERI/src/components/details.js"],"names":["React","useParams","useEffect","connect","citiesActions","itinerariesActions","Link","LinkRouter","detailsItinerary","Details","props","city","itineraries","id","findOneCity","itinerariesPerCity","length","map","itinerary","_id","mapStateToProps","state","Data","itinerariesReducers","mapDispatchToProps"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;AACA,SAAQC,IAAI,IAAIC,UAAhB,QAAiC,kBAAjC;AACA,OAAOC,gBAAP,MAA6B,eAA7B;;;AAIA,MAAMC,OAAO,GAAIC,KAAD,IAAU;AAAA;;AAAA;;AACtB,QAAM;AACFC,IAAAA,IADE;AAEFC,IAAAA;AAFE,MAGFF,KAHJ;AAKA,QAAM;AAACG,IAAAA;AAAD,MAAOZ,SAAS,EAAtB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAEZQ,IAAAA,KAAK,CAACI,WAAN,CAAkBD,EAAlB;AACAH,IAAAA,KAAK,CAACK,kBAAN,CAAyBF,EAAzB;AACH,GAJQ,EAIN,EAJM,CAAT;AAOA,sBAEI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BAEC;AAAK,MAAA,SAAS,EAAC,8DAAf;AAAA,6BAID;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,kBACC,uBAAAH,KAAK,CAACE,WAAN,0EAAmBI,MAAnB,MAA8B,CAA9B,GAEEJ,WAAW,CAACK,GAAZ,CAAgBC,SAAS,iBAEpB;AAAkB,UAAA,SAAS,EAAEA;AAA7B,WAA6CA,SAAS,CAACC,GAAvD;AAAA;AAAA;AAAA;AAAA,gBAFL,CAFF,gBAOQ;AAAI,UAAA,SAAS,EAAC,oCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AART;AAAA;AAAA;AAAA;AAAA;AAJC;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AA6BC,CA5CL;;GAAMV,O;UAMWR,S;;;KANXQ,O;;AA6CF,MAAMW,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACIV,IAAAA,IAAI,EAAEU,KAAK,CAACC,IAAN,CAAWX,IADrB;AAEGC,IAAAA,WAAW,EAAES,KAAK,CAACE,mBAAN,CAA0BX;AAF1C,GAAP;AAMD,CAPH;;AASE,MAAMY,kBAAkB,GAAG;AACjBV,EAAAA,WAAW,EAAEV,aAAa,CAACU,WADV;AAEjBC,EAAAA,kBAAkB,EAAEV,kBAAkB,CAACU;AAFtB,CAA3B;AAIA,eAAeZ,OAAO,CAACiB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6Cf,OAA7C,CAAf","sourcesContent":["import React from \"react\";\r\nimport { useParams } from 'react-router-dom'\r\nimport { useEffect } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport citiesActions from \"../redux/actions/citiesActions\";\r\nimport itinerariesActions from '../redux/actions/itinerariesActions'\r\nimport {Link as LinkRouter} from \"react-router-dom\"\r\nimport detailsItinerary from './detailsCard'\r\n\r\n\r\n\r\nconst Details = (props) =>{\r\n    const { \r\n        city,\r\n        itineraries\r\n    } = props;\r\n \r\n    const {id} = useParams()\r\n  \r\n    useEffect(() => {\r\n        \r\n        props.findOneCity(id)\r\n        props.itinerariesPerCity(id)\r\n    }, []);\r\n\r\n       \r\n    return(\r\n        \r\n        <div className='mb-5'>\r\n         \r\n         <div className=\"d-flex flex-column align-items-center justify-content-center\"> \r\n            \r\n        \r\n        \r\n        <div className=\"d-flex row\">\r\n        {props.itineraries?.length !== 0 ?  \r\n        ( \r\n           itineraries.map(itinerary => (\r\n            \r\n                <detailsItinerary itinerary={itinerary} key={itinerary._id} />\r\n               \r\n                ))):\r\n                (<h3 className='mt-5 title h2 text-center textCarr'>WE COULD NOT FIND ANY ITINERARY FOR THIS CITY</h3>)}\r\n         \r\n         </div>\r\n\r\n\r\n\r\n        \r\n    </div>\r\n        )\r\n    </div>\r\n    \r\n        )\r\n       \r\n    }\r\n    const mapStateToProps = (state) => {\r\n        return {\r\n                   city: state.Data.city,\r\n                  itineraries: state.itinerariesReducers.itineraries, \r\n                  \r\n                   \r\n        };\r\n      };\r\n      \r\n      const mapDispatchToProps = {\r\n                findOneCity: citiesActions.findOneCity,\r\n                itinerariesPerCity: itinerariesActions.itinerariesPerCity\r\n      };\r\n      export default connect(mapStateToProps, mapDispatchToProps)(Details);"]},"metadata":{},"sourceType":"module"}